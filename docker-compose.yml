
networks:
  kafka-network:

services:
  kafka:
    image: 'apache/kafka:3.8.1'  # Image compatible with KRaft
    container_name: kafka_kraft
    env_file:
      - .env
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka_kraft:9093"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT"
      KAFKA_LISTENERS: "PLAINTEXT://kafka_kraft:9092,CONTROLLER://kafka_kraft:9093"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka_kraft:9092"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_LOG_DIRS: "/var/lib/kafka/data"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
    volumes:
      - kafka_data:/var/lib/kafka/data  # Persistency
    ports:
      - "9092:9092"  # Port accessible for the l'API
      - "9093:9093"
    networks:
      - kafka-network
    command: >
      sh -c "
        # Format the storage for Kafka in KRaft mode if meta.properties does not exist
        if [ ! -f /var/lib/kafka/data/meta.properties ]; then
          echo 'Formatting storage for KRaft mode...'
          KAFKA_UUID=$(uuidgen)
          /opt/kafka/bin/kafka-storage.sh format -t ${KAFKA_UUID} -c /opt/kafka/config/kraft/server.properties
        fi;

        # Start Kafka server
        /opt/kafka/bin/kafka-server-start.sh /opt/kafka/config/kraft/server.properties
        
        # Wait for Kafka to be ready
        KAFKA_PID=$$!
        while ! /opt/kafka/bin/kafka-topics.sh --list --bootstrap-server kafka_kraft:9092; do
          echo 'Waiting for Kafka to start...'
          sleep 2
        done
        
        # Create the topic 'incidents' if it does not exist
        /opt/kafka/bin/kafka-topics.sh --create --if-not-exists --topic incidents --bootstrap-server kafka_kraft:9092 --partitions 1 --replication-factor 1 || exit 1
        
        # Wait for Kafka to end
        wait $$KAFKA_PID
        "

    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--list", "--bootstrap-server", "kafka_kraft:9092"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s


  api:
    build: .
    container_name: cyber_api
    ports:
      - 4500:4500
    depends_on:
      - kafka  # Launch Kafka before the API
    volumes:
      - better_sqlite3_data:/app/database # create a volume to keep the DB and make it evolve outside of the API
    env_file:
      - .env
    environment:
      DATABASE_FILE: /app/database/database.db
      KAFKA_BROKER: "kafka_kraft:9092"  # Connection point for the API toward Kafka
    networks:
      - kafka-network

volumes:
  kafka_data:
  better_sqlite3_data: